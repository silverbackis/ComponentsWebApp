# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

php:
    image:
        repository: registry.gitlab.com/silverback-web-apps/cwa/php
        tag: latest
        pullPolicy: Always
    replicaCount: 1
    mercure:
        jwtToken: ""
        publishUrl: ~
        subscribeUrl: https://mercure.example.com/.well-known/mercure
    env: prod
    debug: '0'
    secret: ""
    corsAllowOrigin: "^https?://.*?\\.example\\.com$"
    trustedHosts: "^.*\\.example\\.com$"
    trustedProxies:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
    service:
        type: ClusterIP
        port: 9000
    databaseUrl: 'pgsql://'
    mailer:
        email: 'noreply@example.com'
        dsn: 'smtp://'
    apiSecretToken: '!ChangeMe!'
    jwt:
        secret: ''
        public: ''
        passphrase: ''
    blackfire:
        id: ''
        token: ''

nginx:
    image:
        repository: registry.gitlab.com/silverback-web-apps/cwa/nginx
        tag: latest
        pullPolicy: Always
    replicaCount: 1
    service:
        type: ClusterIP
        port: 80

varnish:
    enabled: true
    image:
        repository: registry.gitlab.com/silverback-web-apps/cwa/varnish
        tag: latest
        pullPolicy: Always
    replicaCount: 1
    service:
        type: ClusterIP
        port: 80
    resources:
      limits:
        memory: 60Mi
        cpu: 50m

vulcain:
    enabled: true
    image:
        repository: dunglas/vulcain
        tag: latest
        pullPolicy: Always
    replicaCount: 1
    service:
        type: ClusterIP
        port: 80

# Full configuration: https://github.com/helm/charts/tree/master/stable/mercure
mercure:
    image:
        tag: v0.10.1
    nameOverride: api-mercure
    enabled: true
    allowAnonymous: true
    corsAllowedOrigins: ["^https?://.*?\\.example\\.com$"]
    publishAllowedOrigins: ["^https?://.*?-api-php$", "https://localhost:1337"]
    jwtKey: ""
    ingress:
        enabled: false
        hosts:
            -   host: mercure.example.com
                paths: []
        tls: []
        #  - secretName: mercure-example-tls
        #    hosts:
        #      - chart-example.local

blackfire:
    enabled: false
    image:
        repository: blackfire/blackfire
        tag: latest
        pullPolicy: Always
    server:
        id: ''
        token: ''

pvc:
  size:
    uploads: 4Gi

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
        -   host: api.example.com
            paths: []
    tls: []
    #  - secretName: api-example-tls
    #    hosts:
    #      - api.example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

annotations: {}
